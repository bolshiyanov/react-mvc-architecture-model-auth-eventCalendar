{"version":3,"sources":["store/reducers/auth/types.ts","utils/rules.ts","hooks/useTypedSelector.ts","store/reducers/event/types.ts","api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/action-creators.ts","router/index.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","pages/Login.tsx","utils/date.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","rules","message","arguments","length","undefined","required","validator","_","value","isSameOrAfter","moment","Promise","resolve","reject","Error","useTypedSelector","useSelector","EventActionEnum","UserService","_classCallCheck","_createClass","key","_getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","stop","apply","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","_ref","_callee2","dispatch","_context2","setTimeout","response","mockUser","getUsers","sent","data","find","localStorage","setItem","e","_x","logout","_ref3","_callee3","_context3","removeItem","_x2","RouteNames","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","t0","console","log","createEvent","event","_ref2","events","json","getItem","JSON","parse","push","stringify","fetchEvents","currentUserEvents","filter","ev","author","guest","_x3","allActionCreators","_objectSpread","useActions","useDispatch","bindActionCreators","LoginForm","_useTypedSelector","state","error","isLoading","_useState","useState","_useState2","_slicedToArray","setUsername","_useState3","_useState4","setPassword","_jsxs","Form","onFinish","children","_jsx","style","color","Item","label","name","Input","onChange","target","Button","htmlType","loading","Login","Layout","Row","justify","align","className","Card","formatDate","date","year","getFullYear","month","getMonth","concat","day","getDate","EventCalendar","props","Calendar","dateCellRender","formatedDate","toDate","currentDayEvents","map","index","description","EventForm","setEvent","submit","DatePicker","selectDate","Select","guests","Option","Event","modalVisible","setModalVisible","_useActions","useEffect","onClick","Modal","title","visible","footer","onCancel","publicRoutes","path","LOGIN","exact","component","privateRoutes","EVENT","AppRouter","isAuth","Switch","route","Route","Redirect","to","Navbar","router","useHistory","Header","_Fragment","Menu","theme","mode","selectable","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","Provider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.563171bc.chunk.js","sourcesContent":["import {IUser} from \"../../../models/IUser\";\n\nexport interface AuthState {\n    isAuth: boolean;\n    user: IUser;\n    isLoading: boolean;\n    error: string;\n}\n\nexport enum AuthActionEnum {\n    SET_AUTH = \"SET_AUTH\",\n    SET_ERROR = \"SET_ERROR\",\n    SET_USER = \"SET_USER\",\n    SET_IS_LOADING = \"SET_IS_LOADING\",\n}\n\nexport interface SetAuthAction {\n    type: AuthActionEnum.SET_AUTH;\n    payload: boolean;\n}\nexport interface SetErrorAction {\n    type: AuthActionEnum.SET_ERROR;\n    payload: string;\n}\nexport interface SetUserAction {\n    type: AuthActionEnum.SET_USER;\n    payload: IUser;\n}\nexport interface SetIsLoadingAction {\n    type: AuthActionEnum.SET_IS_LOADING;\n    payload: boolean;\n}\n\nexport type AuthAction =\n    SetAuthAction |\n    SetUserAction |\n    SetErrorAction |\n    SetIsLoadingAction\n","import moment, { Moment } from \"moment\";\n\nexport const rules = {\n  required: (message = \"Required field\") => ({\n    required: true,\n    message,\n  }),\n  isDateAfter: (message: string) => () => ({\n    validator(_: any, value: Moment) {\n      if (value.isSameOrAfter(moment())) {\n        return Promise.resolve();\n      }\n      return Promise.reject(new Error(message));\n    },\n  }),\n};","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import {IUser} from \"../../../models/IUser\";\nimport {IEvent} from \"../../../models/IEvent\";\n\n\nexport interface EventState {\n    guests: IUser[];\n    events: IEvent[];\n}\n\nexport enum EventActionEnum {\n    SET_GUESTS = \"SET_GUESTS\",\n    SET_EVENTS = \"SET_EVENTS\"\n}\n\nexport interface SetGuestsAction {\n    type: EventActionEnum.SET_GUESTS;\n    payload: IUser[]\n}\n\nexport interface SetEventsAction {\n    type: EventActionEnum.SET_EVENTS;\n    payload: IEvent[]\n}\n\nexport type EventAction =\n    SetGuestsAction |\n    SetEventsAction\n","import axios, {AxiosResponse} from \"axios\";\nimport {IUser} from \"../models/IUser\";\n\nexport default class UserService {\n    static async getUsers(): Promise<AxiosResponse<IUser[]>> {\n        return axios.get<IUser[]>('./users.json')\n    }\n}\n","import {AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction} from \"./types\";\nimport {IUser} from \"../../../models/IUser\";\nimport {AppDispatch} from \"../../index\";\nimport axios from \"axios\";\nimport UserService from \"../../../api/UserService\";\n\nexport const AuthActionCreators = {\n    setUser: (user: IUser): SetUserAction => ({type: AuthActionEnum.SET_USER, payload: user}),\n    setIsAuth: (auth: boolean): SetAuthAction => ({type: AuthActionEnum.SET_AUTH, payload: auth}),\n    setIsLoading: (payload: boolean): SetIsLoadingAction => ({type: AuthActionEnum.SET_IS_LOADING, payload}),\n    setError: (payload: string): SetErrorAction => ({type: AuthActionEnum.SET_ERROR, payload}),\n    login: (username: string, password: string) => async (dispatch: AppDispatch) => {\n        try {\n            dispatch(AuthActionCreators.setIsLoading(true));\n            setTimeout(async () => {\n                const response = await UserService.getUsers()\n                const mockUser = response.data.find(user => user.username === username && user.password === password);\n                if (mockUser) {\n                    localStorage.setItem('auth', 'true');\n                    localStorage.setItem('username', mockUser.username);\n                    dispatch(AuthActionCreators.setUser(mockUser));\n                    dispatch(AuthActionCreators.setIsAuth(true))\n                } else {\n                    dispatch(AuthActionCreators.setError('Invalid username or password'));\n                }\n                dispatch(AuthActionCreators.setIsLoading(false));\n            }, 1000)\n        } catch (e) {\n            dispatch(AuthActionCreators.setError('An error occurred during login'))\n        }\n    },\n    logout: () => async (dispatch: AppDispatch) => {\n        localStorage.removeItem('auth')\n        localStorage.removeItem('username')\n        dispatch(AuthActionCreators.setUser({} as IUser));\n        dispatch(AuthActionCreators.setIsAuth(false))\n    }\n}\n","import {EventActionEnum, SetEventsAction, SetGuestsAction} from \"./types\";\nimport {IUser} from \"../../../models/IUser\";\nimport {IEvent} from \"../../../models/IEvent\";\nimport {AppDispatch} from \"../../index\";\nimport UserService from \"../../../api/UserService\";\n\nexport const EventActionCreators = {\n    setGuests: (payload: IUser[]): SetGuestsAction => ({type: EventActionEnum.SET_GUESTS, payload}),\n    setEvents: (payload: IEvent[]): SetEventsAction => ({type: EventActionEnum.SET_EVENTS, payload}),\n    fetchGuests: () =>  async (dispatch: AppDispatch) => {\n        try {\n            const response = await UserService.getUsers()\n            dispatch(EventActionCreators.setGuests(response.data));\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    createEvent: (event: IEvent) =>  async (dispatch: AppDispatch) => {\n        try {\n            const events = localStorage.getItem(\"events\") || '[]'\n            const json = JSON.parse(events) as IEvent[];\n            json.push(event);\n            dispatch(EventActionCreators.setEvents(json));\n            localStorage.setItem('events', JSON.stringify(json));\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\n        try {\n            const events = localStorage.getItem(\"events\") || '[]'\n            const json = JSON.parse(events) as IEvent[];\n            const currentUserEvents = json.filter(ev => ev.author === username || ev.guest === username);\n            dispatch(EventActionCreators.setEvents(currentUserEvents));\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}\n","import React from \"react\";\nimport Login from \"../pages/Login\";\nimport Event from '../pages/Event';\n\nexport interface IRoute {\n    path: string;\n    component: React.ComponentType;\n    exact?: boolean;\n}\n\nexport enum RouteNames {\n    LOGIN = '/login',\n    EVENT = '/'\n}\n\nexport const publicRoutes: IRoute[] = [\n    {path: RouteNames.LOGIN, exact: true, component: Login}\n]\n\nexport const privateRoutes: IRoute[] = [\n    {path: RouteNames.EVENT, exact: true, component: Event}\n]\n","import {AuthActionCreators} from \"./auth/action-creators\";\nimport {EventActionCreators} from \"./event/action-creators\";\n\nexport const allActionCreators = {\n    ...AuthActionCreators,\n    ...EventActionCreators\n}\n","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {allActionCreators} from \"../store/reducers/action-creators\";\nimport {useMemo} from \"react\";\n\nexport const useActions = () => {\n    const dispatch = useDispatch();\n    return bindActionCreators(allActionCreators, dispatch);\n}\n\n","import React, {FC, useState} from 'react';\nimport {Button, Form, Input} from \"antd\";\nimport {rules} from \"../utils/rules\";\nimport {useDispatch} from \"react-redux\";\nimport {AuthActionCreators} from \"../store/reducers/auth/action-creators\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\nimport {useActions} from \"../hooks/useActions\";\n\nconst LoginForm: FC = () => {\n    const {error, isLoading} = useTypedSelector(state => state.auth);\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const {login} = useActions()\n\n    const submit = () => {\n        login(username, password)\n    }\n\n    return (\n        <Form\n            onFinish={submit}\n        >\n            {error && <div style={{color: 'red'}}>\n                {error}\n            </div>}\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[rules.required(\"Please enter your username!\")]}\n            >\n                <Input\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[rules.required(\"Please enter your password\")]}\n            >\n                <Input\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    type={\"password\"}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n                Enter\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default LoginForm;\n","import React, {FC} from 'react';\nimport {Card, Layout, Row} from \"antd\";\nimport LoginForm from \"../components/LoginForm\";\n\nconst Login: FC = () => {\n    return (\n        <Layout>\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\n                <Card>\n                    <LoginForm/>\n                </Card>\n            </Row>\n        </Layout>\n    );\n};\n\nexport default Login;\n","export const formatDate = (date: Date): string => {\n    const year = date.getFullYear();\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n    return `${year}.${month}.${day}`\n}\n","import React, {FC} from 'react';\nimport {Calendar} from \"antd\";\nimport {IEvent} from \"../models/IEvent\";\nimport {Moment} from \"moment\";\nimport {formatDate} from \"../utils/date\";\n\ninterface EventCalendarProps {\n    events: IEvent[];\n}\n\nconst EventCalendar: FC<EventCalendarProps> = (props) => {\n\n    function dateCellRender(value: Moment) {\n        const formatedDate = formatDate(value.toDate());\n        const currentDayEvents = props.events.filter(ev => ev.date === formatedDate);\n        return (\n            <div>\n                {currentDayEvents.map((ev, index) =>\n                    <div key={index}>{ev.description}</div>\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <Calendar\n            dateCellRender={dateCellRender}\n        />\n    );\n};\n\nexport default EventCalendar;\n","import React, {FC, useState} from 'react';\nimport {Button, DatePicker, Form, Input, Row, Select} from \"antd\";\nimport {rules} from \"../utils/rules\";\nimport {IUser} from \"../models/IUser\";\nimport {IEvent} from \"../models/IEvent\";\nimport {Moment} from \"moment\";\nimport {formatDate} from \"../utils/date\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\n\ninterface EventFormProps {\n    guests: IUser[],\n    submit: (event: IEvent) => void\n}\n\nconst EventForm: FC<EventFormProps> = (props) => {\n    const [event, setEvent] = useState<IEvent>({\n        author: '',\n        date: '',\n        description: '',\n        guest: ''\n    } as IEvent);\n    const {user} = useTypedSelector(state => state.auth)\n\n    const selectDate = (date: Moment | null) => {\n        if (date) {\n            setEvent({...event, date: formatDate(date.toDate())})\n        }\n    }\n\n    const submitForm = () => {\n        props.submit({...event, author: user.username})\n    }\n\n    return (\n        <Form onFinish={submitForm}>\n            <Form.Item\n                label=\"Event Description\"\n                name=\"description\"\n                rules={[rules.required()]}\n            >\n                <Input\n                    onChange={e => setEvent({...event, description: e.target.value})}\n                    value={event.description}\n                />\n            </Form.Item>\n            <Form.Item\n                label=\"Date of the event\"\n                name=\"date\"\n                rules={[rules.required(), rules.isDateAfter(\"You cannot create an event in the past\")]}\n            >\n                <DatePicker\n                    onChange={(date) => selectDate(date)}\n                />\n            </Form.Item>\n            <Form.Item\n                label=\"Select a guest\"\n                name=\"guest\"\n                rules={[rules.required()]}\n            >\n                <Select onChange={(guest: string) => setEvent({...event, guest})}>\n                    {props.guests.map(guest =>\n                        <Select.Option key={guest.username} value={guest.username}>\n                            {guest.username}\n                        </Select.Option>\n                    )}\n                </Select>\n            </Form.Item>\n            <Row justify=\"end\">\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    To create\n                    </Button>\n                </Form.Item>\n            </Row>\n        </Form>\n    );\n};\n\nexport default EventForm;\n","import React, {FC, useEffect, useState} from 'react';\nimport {Button, Layout, Modal, Row} from \"antd\";\nimport EventCalendar from \"../components/EventCalendar\";\nimport EventForm from \"../components/EventForm\";\nimport {useActions} from \"../hooks/useActions\";\nimport {useSelector} from \"react-redux\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\nimport {IEvent} from \"../models/IEvent\";\n\nconst Event: FC = () => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const {fetchGuests, createEvent, fetchEvents} = useActions();\n    const {guests,events} = useTypedSelector(state => state.event);\n    const {user} = useTypedSelector(state => state.auth);\n\n    useEffect(() => {\n        fetchGuests()\n        fetchEvents(user.username);\n    }, [])\n\n    const addNewEvent = (event: IEvent) => {\n        setModalVisible(false);\n        createEvent(event);\n    }\n\n    return (\n        <Layout>\n            <EventCalendar events={events}/>\n            <Row justify=\"center\">\n                <Button\n                    onClick={() => setModalVisible(true)}\n                >\n                    Add new event\n                </Button>\n            </Row>\n            <Modal\n                title=\"Add new avent\"\n                visible={modalVisible}\n                footer={null}\n                onCancel={() => setModalVisible(false)}\n            >\n                <EventForm\n                    guests={guests}\n                    submit={addNewEvent}\n                />\n            </Modal>\n        </Layout>\n    );\n};\n\nexport default Event;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {privateRoutes, publicRoutes, RouteNames} from \"../router\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\n\nconst AppRouter = () => {\n    const {isAuth} = useTypedSelector(state => state.auth);\n\n    return (\n        isAuth ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route path={route.path}\n                           exact={route.exact}\n                           component={route.component}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to={RouteNames.EVENT}/>\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route =>\n                    <Route path={route.path}\n                           exact={route.exact}\n                           component={route.component}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to={RouteNames.LOGIN}/>\n            </Switch>\n    );\n};\n\nexport default AppRouter;\n","import React, {FC} from 'react';\nimport {Layout, Menu, Row} from \"antd\";\nimport {useHistory} from 'react-router-dom';\nimport {RouteNames} from \"../router\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\nimport {AuthActionCreators} from \"../store/reducers/auth/action-creators\";\nimport {useDispatch} from \"react-redux\";\nimport {useActions} from \"../hooks/useActions\";\n\nconst Navbar: FC = () => {\n    const router = useHistory()\n    const {isAuth, user} = useTypedSelector(state => state.auth);\n    const {logout} = useActions()\n\n\n    return (\n        <Layout.Header>\n            <Row justify=\"end\">\n                {isAuth\n                    ?\n                    <>\n                        <div style={{color: 'white'}}>\n                            {user.username}\n                        </div>\n                        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n\n                            <Menu.Item\n                                onClick={logout}\n                                key={1}\n                            >\n                                SignOut\n                            </Menu.Item>\n                        </Menu>\n                    </>\n                    :\n                    <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n                        <Menu.Item\n                            onClick={() => router.push(RouteNames.LOGIN)}\n                            key={1}\n                        >\n                            SignIn\n                        </Menu.Item>\n                    </Menu>\n                }\n            </Row>\n        </Layout.Header>\n    );\n};\n\nexport default Navbar;\n","import React, { FC, useEffect } from \"react\";\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/Navbar\";\nimport { Layout } from \"antd\";\nimport \"./App.css\";\nimport { useActions } from \"./hooks/useActions\";\nimport { IUser } from \"./models/IUser\";\n\nconst App: FC = () => {\n  const { setUser, setIsAuth } = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setUser({ username: localStorage.getItem(\"username\" || \"\") } as IUser);\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"h100\">\n      <Layout>\n        <Navbar />\n        <Layout.Content>\n          <AppRouter />\n        </Layout.Content>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","import {AuthAction, AuthActionEnum, AuthState} from \"./types\";\nimport {IUser} from \"../../../models/IUser\";\n\n\nconst initialState: AuthState = {\n    isAuth: false,\n    error: '',\n    isLoading: false,\n    user: {} as IUser\n}\n\nexport default function authReducer(state = initialState, action: AuthAction): AuthState {\n    switch (action.type) {\n        case AuthActionEnum.SET_AUTH:\n            return {...state, isAuth: action.payload, isLoading: false}\n        case AuthActionEnum.SET_USER:\n            return {...state, user: action.payload}\n        case AuthActionEnum.SET_ERROR:\n            return {...state, error: action.payload, isLoading: false}\n        case AuthActionEnum.SET_IS_LOADING:\n            return {...state, isLoading: action.payload}\n        default:\n            return state;\n    }\n}\n","import {EventAction, EventActionEnum, EventState} from \"./types\";\n\n\nconst initialState: EventState = {\n    events: [],\n    guests: []\n}\n\nexport default function EventReducer(state = initialState, action: EventAction): EventState {\n    switch (action.type) {\n        case EventActionEnum.SET_GUESTS:\n            return {...state, guests: action.payload}\n        case EventActionEnum.SET_EVENTS:\n            return {...state, events: action.payload}\n        default:\n            return state;\n    }\n}\n","import auth from './auth'\nimport event from './event';\n\nexport default {\n    auth,\n    event\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers)\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}